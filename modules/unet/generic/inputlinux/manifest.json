{
	"description": "Support for generic input devices and speaker under Linux",
	"platforms": ["linux"],
	"detector_modules": {
		"det" : {
//			"id": OLD_MODULE_ID  must be specified only if module changed its parent library
			"title": ["txt","det_title"],
			"description": ["txt","det_descr"],
			"params_tmpl": {
				//"shortDescr":
				//"longDescr":
				//"propList":
				//"newDialog":
				//"editDialog":
			},
			"manual_devices": { //optional set of templates to enter device spec manually. detector's code can (and must) interpret it as hints to find devices
				"stub_device": {
					"title": "Stub devices"
					//"shortDescr":
					//"longDescr":
					//"propList":
					//"newDialog":
					//"editDialog":
				}
			}
		}
	},
	"driver_modules": {
		"drv" : {
			"title": ["txt","drv_title"],
			"description": ["txt","drv_descr"],
			"params_tmpl": {
				//"shortDescr":
				//"longDescr":
				//"propList":
				//"newDialog":
				//"editDialog":
			}
		}
	},
	"contypes": {
		"linuxinput" : {
			"title": "Linux input device connection",
			"tmpl": { //templates for processing localident data. if key starts with 'details', then template is applied to hw device details, otherwise template if for ident
				"shortDescr":	["concatws", " ",
					["data", "hwid.bus"],
					["case", 
						[["hash_exists", ["data", "hwid.caps"], "key", "rel"],		["txt","dev_mouse"]],
						[["hash_exists", ["data", "hwid.caps"], "key"],				["txt","dev_keyboard"]],
						[["hash_exists", ["data", "hwid.caps"], "led"],				["txt","dev_led"]],
						[["hash_exists", ["data", "hwid.caps"], "snd"],				["txt","dev_snd"]],
						[["hash_exists", ["data", "hwid.caps"], "sw"],				["txt","dev_sw"]]
					],
					["vendor_name", ["data", "hwid.vendor"]]
				]
				//"longDescr":
				//"propList":
				//"newDialog":
				//"editDialog":
				//"detailsPropList":
			}
		}
	}
}